start computer(): [0x9b886b8e398b5f48]#(C-(0)(1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17))
main problem (1): [0x9b886b8e398b5f48]#(C-(0)(1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17))
current problem: [0x9b886b8e398b5f48]#(C-(0)(1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17))
visited [0]: false
alpha [0]: []
visited [1]: false
alpha [1]: []
visited [2]: false
alpha [2]: []
visited [3]: false
alpha [3]: []
visited [4]: false
alpha [4]: []
visited [5]: false
alpha [5]: []
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=0, current_prob=18, nbr_prob=Some(NodeIdx(21))
main problem (2): [0x3e41cbd35d2936b]#(C0(C-(4))(C-(0))(C-(1)(2)(3)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)))
current problem: [0x3e41cbd35d2936b]#(C-(4))
visited [0]: true
alpha [0]: []
visited [1]: false
alpha [1]: []
visited [2]: false
alpha [2]: []
visited [3]: false
alpha [3]: []
visited [4]: false
alpha [4]: []
visited [5]: false
alpha [5]: []
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=4, current_prob=21, nbr_prob=None
pull_forward(): nbr=1
pull_forward(): v=1
tree[prev_layer].data.active=0, is_pivot_layer()=1
new layer formed: [0x5c89e443c27ec16f]#(C0(C-(4))(C-(0))(C-)(C-(1)(2)(3)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)))
pull_forward(): nbr=2
pull_forward(): v=2
tree[prev_layer].data.active=0, is_pivot_layer()=0
pull_forward(): nbr=3
pull_forward(): v=3
tree[prev_layer].data.active=0, is_pivot_layer()=0
pull_forward(): nbr=5
pull_forward(): v=5
tree[prev_layer].data.active=0, is_pivot_layer()=0
main problem (3): [0xe233f690e6a5bec]#(C0(C-(4))(C-(0))(C-(5)(3)(2)(1))(C-(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)))
current problem: [0xe233f690e6a5bec]#(C-(0))
visited [0]: true
alpha [0]: [4]
visited [1]: false
alpha [1]: []
visited [2]: false
alpha [2]: []
visited [3]: false
alpha [3]: []
visited [4]: true
alpha [4]: []
visited [5]: false
alpha [5]: []
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=0, current_prob=20, nbr_prob=None
main problem (4): [0xe233f690e6a5bec]#(C0(C-(4))(C-(0))(C-(5)(3)(2)(1))(C-(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)))
current problem: [0xe233f690e6a5bec]#(C-(5)(3)(2)(1))
visited [0]: true
alpha [0]: [4]
visited [1]: false
alpha [1]: []
visited [2]: false
alpha [2]: []
visited [3]: false
alpha [3]: []
visited [4]: true
alpha [4]: [0]
visited [5]: false
alpha [5]: []
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=5, current_prob=22, nbr_prob=Some(NodeIdx(25))
pull_forward(): nbr=14
pull_forward(): v=14
tree[prev_layer].data.active=1, is_pivot_layer()=0
new layer formed: [0x2bccae44000ee921]#(C0(C-(4))(C-(0))(C5(C-(3)(2)(1))(C-(5))(C-))(C-)(C-(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)))
pull_forward(): nbr=15
pull_forward(): v=15
tree[prev_layer].data.active=0, is_pivot_layer()=0
pull_forward(): nbr=16
pull_forward(): v=16
tree[prev_layer].data.active=0, is_pivot_layer()=0
pull_forward(): nbr=17
pull_forward(): v=17
tree[prev_layer].data.active=0, is_pivot_layer()=0
pull_forward(): nbr=11
pull_forward(): v=11
tree[prev_layer].data.active=0, is_pivot_layer()=0
pull_forward(): nbr=12
pull_forward(): v=12
tree[prev_layer].data.active=0, is_pivot_layer()=0
pull_forward(): nbr=10
pull_forward(): v=10
tree[prev_layer].data.active=0, is_pivot_layer()=0
pull_forward(): nbr=13
pull_forward(): v=13
tree[prev_layer].data.active=0, is_pivot_layer()=0
pull_forward(): nbr=6
pull_forward(): v=6
tree[prev_layer].data.active=0, is_pivot_layer()=0
pull_forward(): nbr=7
pull_forward(): v=7
tree[prev_layer].data.active=0, is_pivot_layer()=0
pull_forward(): nbr=8
pull_forward(): v=8
tree[prev_layer].data.active=0, is_pivot_layer()=0
pull_forward(): nbr=9
pull_forward(): v=9
tree[prev_layer].data.active=0, is_pivot_layer()=0
main problem (5): [0x3697a5525461c7c2]#(C0(C-(4))(C-(0))(C5(C-(3)(2)(1))(C-(5)))(C-(9)(8)(7)(6)(13)(10)(12)(11)(17)(16)(15)(14)))
current problem: [0x3697a5525461c7c2]#(C-(3)(2)(1))
visited [0]: true
alpha [0]: [4]
visited [1]: false
alpha [1]: []
visited [2]: false
alpha [2]: []
visited [3]: false
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5]
visited [5]: true
alpha [5]: []
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=3, current_prob=25, nbr_prob=Some(NodeIdx(27))
main problem (6): [0xe6c7e768b89ec6e1]#(C0(C-(4))(C-(0))(C5(C3(C-(2)(1))(C-(3)))(C-(5)))(C-(9)(8)(7)(6)(13)(10)(12)(11)(17)(16)(15)(14)))
current problem: [0xe6c7e768b89ec6e1]#(C-(2)(1))
visited [0]: true
alpha [0]: [4]
visited [1]: false
alpha [1]: []
visited [2]: false
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3]
visited [5]: true
alpha [5]: [3]
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=2, current_prob=27, nbr_prob=Some(NodeIdx(29))
main problem (7): [0xec2b9bb4932cd3f8]#(C0(C-(4))(C-(0))(C5(C3(C2(C-(2))(C-(1)))(C-(3)))(C-(5)))(C-(9)(8)(7)(6)(13)(10)(12)(11)(17)(16)(15)(14)))
current problem: [0xec2b9bb4932cd3f8]#(C-(2))
visited [0]: true
alpha [0]: [4]
visited [1]: false
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: [2]
visited [4]: true
alpha [4]: [0, 5, 3, 2]
visited [5]: true
alpha [5]: [3, 2]
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=2, current_prob=28, nbr_prob=None
main problem (8): [0xec2b9bb4932cd3f8]#(C0(C-(4))(C-(0))(C5(C3(C2(C-(2))(C-(1)))(C-(3)))(C-(5)))(C-(9)(8)(7)(6)(13)(10)(12)(11)(17)(16)(15)(14)))
current problem: [0xec2b9bb4932cd3f8]#(C-(1))
visited [0]: true
alpha [0]: [4]
visited [1]: false
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: [2, 2]
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2]
visited [5]: true
alpha [5]: [3, 2, 2]
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=1, current_prob=27, nbr_prob=None
main problem (9): [0xec2b9bb4932cd3f8]#(C0(C-(4))(C-(0))(C5(C3(C2(C-(2))(C-(1)))(C-(3)))(C-(5)))(C-(9)(8)(7)(6)(13)(10)(12)(11)(17)(16)(15)(14)))
current problem: [0xec2b9bb4932cd3f8]#(C2(C-(2))(C-(1)))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: [2, 2, 1]
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1]
visited [5]: true
alpha [5]: [3, 2, 2, 1]
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
start: [0xec2b9bb4932cd3f8]#(C2(C-(2))(C-(1)))
return: [0x75bcf01c20abd206]#(1)
extra: [0x75bcf01c20abd206]#(1)
start: [0x75bcf01c20abd206]#(C2(C-(2)))
finish: [0x36a5a6bac08037e]#(C2(2))
start: [0x36a5a6bac08037e]#(C2(2))
start: [0x36a5a6bac08037e]#(C2(2))
alpha[2]: []
subtree_roots: []
sibling_groups: [], tree=[0x36a5a6bac08037e]#(C2(2))
compute_fact_perm_edges 18
start: prob=[0x36a5a6bac08037e]#(C2(2)), new=[0x36a5a6bac08037e]#(1)
main problem (10): [0x22a3fc1a0f1224c3]#(C0(C-(4))(C-(0))(C5(C3(C2(U(2)(1)))(C-(3)))(C-(5)))(C-(9)(8)(7)(6)(13)(10)(12)(11)(17)(16)(15)(14)))
current problem: [0x22a3fc1a0f1224c3]#(C-(3))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: [2, 2, 1]
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1]
visited [5]: true
alpha [5]: [3, 2, 2, 1]
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=3, current_prob=22, nbr_prob=None
main problem (11): [0x22a3fc1a0f1224c3]#(C0(C-(4))(C-(0))(C5(C3(C2(U(2)(1)))(C-(3)))(C-(5)))(C-(9)(8)(7)(6)(13)(10)(12)(11)(17)(16)(15)(14)))
current problem: [0x22a3fc1a0f1224c3]#(C3(C2(U(2)(1)))(C-(3)))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: [3]
visited [2]: true
alpha [2]: [3]
visited [3]: true
alpha [3]: [2, 2, 1]
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3]
visited [5]: true
alpha [5]: [3, 2, 2, 1, 3]
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
start: [0x22a3fc1a0f1224c3]#(C3(C2(U(2)(1)))(C-(3)))
return: [0x22a3fc1a0f1224c3]#invalid(None)
extra: [0x22a3fc1a0f1224c3]#invalid(None)
start: [0x22a3fc1a0f1224c3]#(C3(C2(U(2)(1)))(C-(3)))
finish: [0x1b597ccc845b9436]#(C3(U(2)(1))(3))
start: [0x1b597ccc845b9436]#(C3(U(2)(1))(3))
start: [0x1b597ccc845b9436]#(C3(U(2)(1))(3))
alpha[3]: [2, 1]
subtree_roots: [29]
sibling_groups: [(29, 0)], tree=[0x1b597ccc845b9436]#(C3(U(2)(1))(3))
refining tree=[0x1b597ccc845b9436]#(U(2)(1)), index=29, split_type=Left, new_prime=0
alpha[1]: [3]
subtree_roots: [3]
sibling_groups: [(3, 0)], tree=[0x1b597ccc845b9436]#(C3(U(2)(1))(3))
refining tree=[0x1b597ccc845b9436]#(3), index=3, split_type=Left, new_prime=0
alpha[2]: [3]
subtree_roots: [3]
sibling_groups: [(3, 0)], tree=[0x1b597ccc845b9436]#(C3(U(2)(1))(3))
refining tree=[0x1b597ccc845b9436]#(3), index=3, split_type=Left, new_prime=0
compute_fact_perm_edges 18
start: prob=[0x21e2ab53cb3cdba5]#(C3(J(U(2)(1))(3))), new=[0x21e2ab53cb3cdba5]#invalid(None)
main problem (12): [0x21e2ab53cb3cdba5]#(C0(C-(4))(C-(0))(C5(C3(J(U(2)(1))(3)))(C-(5)))(C-(9)(8)(7)(6)(13)(10)(12)(11)(17)(16)(15)(14)))
current problem: [0x21e2ab53cb3cdba5]#(C-(5))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3]
visited [5]: true
alpha [5]: [3, 2, 2, 1, 3]
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=5, current_prob=24, nbr_prob=None
pull_forward(): nbr=14
pull_forward(): v=14
pull_forward(): nbr=15
pull_forward(): v=15
pull_forward(): nbr=16
pull_forward(): v=16
pull_forward(): nbr=17
pull_forward(): v=17
pull_forward(): nbr=11
pull_forward(): v=11
pull_forward(): nbr=12
pull_forward(): v=12
pull_forward(): nbr=10
pull_forward(): v=10
pull_forward(): nbr=13
pull_forward(): v=13
pull_forward(): nbr=6
pull_forward(): v=6
pull_forward(): nbr=7
pull_forward(): v=7
pull_forward(): nbr=8
pull_forward(): v=8
pull_forward(): nbr=9
pull_forward(): v=9
main problem (13): [0x21e2ab53cb3cdba5]#(C0(C-(4))(C-(0))(C5(C3(J(U(2)(1))(3)))(C-(5)))(C-(9)(8)(7)(6)(13)(10)(12)(11)(17)(16)(15)(14)))
current problem: [0x21e2ab53cb3cdba5]#(C5(C3(J(U(2)(1))(3)))(C-(5)))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: [5]
visited [2]: true
alpha [2]: [5]
visited [3]: true
alpha [3]: [5]
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [3, 2, 2, 1, 3]
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
start: [0x21e2ab53cb3cdba5]#(C5(C3(J(U(2)(1))(3)))(C-(5)))
return: [0x21e2ab53cb3cdba5]#invalid(None)
extra: [0x21e2ab53cb3cdba5]#invalid(None)
start: [0x21e2ab53cb3cdba5]#(C5(C3(J(U(2)(1))(3)))(C-(5)))
finish: [0xf0a14eea67704db2]#(C5(J(U(2)(1))(3))(5))
start: [0xf0a14eea67704db2]#(C5(J(U(2)(1))(3))(5))
start: [0xf0a14eea67704db2]#(C5(J(U(2)(1))(3))(5))
alpha[5]: [3, 2, 1]
subtree_roots: [27]
sibling_groups: [(27, 0)], tree=[0xf0a14eea67704db2]#(C5(J(U(2)(1))(3))(5))
refining tree=[0xf0a14eea67704db2]#(J(U(2)(1))(3)), index=27, split_type=Left, new_prime=0
alpha[3]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xf0a14eea67704db2]#(C5(J(U(2)(1))(3))(5))
refining tree=[0xf0a14eea67704db2]#(5), index=5, split_type=Left, new_prime=0
alpha[1]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xf0a14eea67704db2]#(C5(J(U(2)(1))(3))(5))
refining tree=[0xf0a14eea67704db2]#(5), index=5, split_type=Left, new_prime=0
alpha[2]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xf0a14eea67704db2]#(C5(J(U(2)(1))(3))(5))
refining tree=[0xf0a14eea67704db2]#(5), index=5, split_type=Left, new_prime=0
compute_fact_perm_edges 18
start: prob=[0xcd563284339a6ebb]#(C5(J(U(2)(1))(3)(5))), new=[0xcd563284339a6ebb]#invalid(None)
main problem (14): [0xcd563284339a6ebb]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C-(9)(8)(7)(6)(13)(10)(12)(11)(17)(16)(15)(14)))
current problem: [0xcd563284339a6ebb]#(C-(9)(8)(7)(6)(13)(10)(12)(11)(17)(16)(15)(14))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: []
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: false
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=9, current_prob=26, nbr_prob=Some(NodeIdx(18))
main problem (15): [0x6212ae3eb896cf84]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C-(7)(6)(13)(10)(12)(11)(17)(16)(15)(14))))
current problem: [0x6212ae3eb896cf84]#(C-(8))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9]
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: false
alpha [8]: []
visited [9]: true
alpha [9]: []
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=8, current_prob=18, nbr_prob=None
main problem (16): [0x6212ae3eb896cf84]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C-(7)(6)(13)(10)(12)(11)(17)(16)(15)(14))))
current problem: [0x6212ae3eb896cf84]#(C-(9))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8]
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: true
alpha [8]: []
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=9, current_prob=22, nbr_prob=None
main problem (17): [0x6212ae3eb896cf84]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C-(7)(6)(13)(10)(12)(11)(17)(16)(15)(14))))
current problem: [0x6212ae3eb896cf84]#(C-(7)(6)(13)(10)(12)(11)(17)(16)(15)(14))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9]
visited [6]: false
alpha [6]: []
visited [7]: false
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=7, current_prob=26, nbr_prob=Some(NodeIdx(30))
main problem (18): [0xdb513d3cf5c0a138]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C-(6)(13)(10)(12)(11)(17)(16)(15)(14)))))
current problem: [0xdb513d3cf5c0a138]#(C-(7))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7]
visited [6]: false
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=7, current_prob=27, nbr_prob=None
main problem (19): [0xdb513d3cf5c0a138]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C-(6)(13)(10)(12)(11)(17)(16)(15)(14)))))
current problem: [0xdb513d3cf5c0a138]#(C-(6)(13)(10)(12)(11)(17)(16)(15)(14))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7]
visited [6]: false
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=6, current_prob=26, nbr_prob=Some(NodeIdx(32))
main problem (20): [0x663e7ad6fa733e83]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C-(13)(10)(12)(11)(17)(16)(15)(14))))))
current problem: [0x663e7ad6fa733e83]#(C-(6))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=6, current_prob=31, nbr_prob=None
main problem (21): [0x663e7ad6fa733e83]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C-(13)(10)(12)(11)(17)(16)(15)(14))))))
current problem: [0x663e7ad6fa733e83]#(C-(13)(10)(12)(11)(17)(16)(15)(14))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: false
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=13, current_prob=26, nbr_prob=Some(NodeIdx(34))
main problem (22): [0x35bc0fbea3fe02d3]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C-(16)(15)(14)(12)(11)(10))(C-(13))(C-(17)))))))
current problem: [0x35bc0fbea3fe02d3]#(C-(16)(15)(14)(12)(11)(10))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: true
alpha [13]: []
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: false
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=16, current_prob=34, nbr_prob=Some(NodeIdx(37))
pull_forward(): nbr=17
pull_forward(): v=17
tree[prev_layer].data.active=0, is_pivot_layer()=1
new layer formed: [0x5990cb8aa1c7616a]#(C13(C16(C-)(C-(16))(C-(15)(14)(12)(11)(10)))(C-(13))(C-)(C-(17)))
main problem (23): [0xa7be8b048b8599af]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(C-(16))(C-(15)(14)(12)(11)(10)))(C-(13))(C-(17)))))))
current problem: [0xa7be8b048b8599af]#(C-(16))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: true
alpha [13]: [16]
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=16, current_prob=36, nbr_prob=None
pull_forward(): nbr=17
pull_forward(): v=17
main problem (24): [0xa7be8b048b8599af]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(C-(16))(C-(15)(14)(12)(11)(10)))(C-(13))(C-(17)))))))
current problem: [0xa7be8b048b8599af]#(C-(15)(14)(12)(11)(10))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: true
alpha [13]: [16, 16]
visited [14]: false
alpha [14]: []
visited [15]: false
alpha [15]: []
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=15, current_prob=34, nbr_prob=Some(NodeIdx(39))
pull_forward(): nbr=17
pull_forward(): v=17
main problem (25): [0x6b476d47baadca3a]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(C-(16))(C15(C-(14))(C-(15))(C-(12)(11)(10))))(C-(13))(C-(17)))))))
current problem: [0x6b476d47baadca3a]#(C-(14))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: true
alpha [13]: [16, 16, 15]
visited [14]: false
alpha [14]: []
visited [15]: true
alpha [15]: []
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=14, current_prob=39, nbr_prob=None
pull_forward(): nbr=17
pull_forward(): v=17
main problem (26): [0x6b476d47baadca3a]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(C-(16))(C15(C-(14))(C-(15))(C-(12)(11)(10))))(C-(13))(C-(17)))))))
current problem: [0x6b476d47baadca3a]#(C-(15))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: true
alpha [13]: [16, 16, 15, 14]
visited [14]: true
alpha [14]: []
visited [15]: true
alpha [15]: [14]
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=15, current_prob=37, nbr_prob=None
pull_forward(): nbr=17
pull_forward(): v=17
main problem (27): [0x6b476d47baadca3a]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(C-(16))(C15(C-(14))(C-(15))(C-(12)(11)(10))))(C-(13))(C-(17)))))))
current problem: [0x6b476d47baadca3a]#(C-(12)(11)(10))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: false
alpha [12]: []
visited [13]: true
alpha [13]: [16, 16, 15, 14, 15]
visited [14]: true
alpha [14]: [15]
visited [15]: true
alpha [15]: [14]
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=12, current_prob=34, nbr_prob=Some(NodeIdx(42))
main problem (28): [0xa363448ef43fe872]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(C-(16))(C15(C-(14))(C-(15))(C12(C-(11)(10))(C-(12)))))(C-(13))(C-(17)))))))
current problem: [0xa363448ef43fe872]#(C-(11)(10))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: false
alpha [11]: []
visited [12]: true
alpha [12]: []
visited [13]: true
alpha [13]: [16, 16, 15, 14, 15, 12]
visited [14]: true
alpha [14]: [15]
visited [15]: true
alpha [15]: [14]
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=11, current_prob=42, nbr_prob=Some(NodeIdx(44))
main problem (29): [0x2e3d0329924709f5]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(C-(16))(C15(C-(14))(C-(15))(C12(C11(C-(10))(C-(11)))(C-(12)))))(C-(13))(C-(17)))))))
current problem: [0x2e3d0329924709f5]#(C-(10))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: false
alpha [10]: []
visited [11]: true
alpha [11]: []
visited [12]: true
alpha [12]: [11]
visited [13]: true
alpha [13]: [16, 16, 15, 14, 15, 12, 11]
visited [14]: true
alpha [14]: [15]
visited [15]: true
alpha [15]: [14]
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=10, current_prob=44, nbr_prob=None
main problem (30): [0x2e3d0329924709f5]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(C-(16))(C15(C-(14))(C-(15))(C12(C11(C-(10))(C-(11)))(C-(12)))))(C-(13))(C-(17)))))))
current problem: [0x2e3d0329924709f5]#(C-(11))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11, 10]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: true
alpha [10]: []
visited [11]: true
alpha [11]: [10]
visited [12]: true
alpha [12]: [11, 10]
visited [13]: true
alpha [13]: [16, 16, 15, 14, 15, 12, 11, 10]
visited [14]: true
alpha [14]: [15]
visited [15]: true
alpha [15]: [14]
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=11, current_prob=43, nbr_prob=None
main problem (31): [0x2e3d0329924709f5]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(C-(16))(C15(C-(14))(C-(15))(C12(C11(C-(10))(C-(11)))(C-(12)))))(C-(13))(C-(17)))))))
current problem: [0x2e3d0329924709f5]#(C11(C-(10))(C-(11)))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11, 10, 11]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: true
alpha [10]: [11]
visited [11]: true
alpha [11]: [10]
visited [12]: true
alpha [12]: [11, 10, 11]
visited [13]: true
alpha [13]: [16, 16, 15, 14, 15, 12, 11, 10, 11]
visited [14]: true
alpha [14]: [15]
visited [15]: true
alpha [15]: [14]
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
start: [0x2e3d0329924709f5]#(C11(C-(10))(C-(11)))
return: [0x2e3d0329924709f5]#invalid(None)
extra: [0x2e3d0329924709f5]#invalid(None)
start: [0x2e3d0329924709f5]#(C11(C-(10))(C-(11)))
finish: [0xddd94eaa942bbda4]#(C11(10)(11))
start: [0xddd94eaa942bbda4]#(C11(10)(11))
start: [0xddd94eaa942bbda4]#(C11(10)(11))
alpha[11]: [10]
subtree_roots: [10]
sibling_groups: [(10, 0)], tree=[0xddd94eaa942bbda4]#(C11(10)(11))
refining tree=[0xddd94eaa942bbda4]#(10), index=10, split_type=Left, new_prime=0
alpha[10]: [11]
subtree_roots: [11]
sibling_groups: [(11, 0)], tree=[0xddd94eaa942bbda4]#(C11(10)(11))
refining tree=[0xddd94eaa942bbda4]#(11), index=11, split_type=Left, new_prime=0
compute_fact_perm_edges 18
start: prob=[0xa5d823561d7300bf]#(C11(J(10)(11))), new=[0xa5d823561d7300bf]#invalid(None)
main problem (32): [0xa5d823561d7300bf]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(C-(16))(C15(C-(14))(C-(15))(C12(C11(J(10)(11)))(C-(12)))))(C-(13))(C-(17)))))))
current problem: [0xa5d823561d7300bf]#(C-(12))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11, 10, 11]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: true
alpha [10]: []
visited [11]: true
alpha [11]: []
visited [12]: true
alpha [12]: [11, 10, 11]
visited [13]: true
alpha [13]: [16, 16, 15, 14, 15, 12, 11, 10, 11]
visited [14]: true
alpha [14]: [15]
visited [15]: true
alpha [15]: [14]
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=12, current_prob=41, nbr_prob=None
main problem (33): [0xa5d823561d7300bf]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(C-(16))(C15(C-(14))(C-(15))(C12(C11(J(10)(11)))(C-(12)))))(C-(13))(C-(17)))))))
current problem: [0xa5d823561d7300bf]#(C12(C11(J(10)(11)))(C-(12)))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11, 10, 11, 12]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: true
alpha [10]: [12]
visited [11]: true
alpha [11]: [12]
visited [12]: true
alpha [12]: [11, 10, 11]
visited [13]: true
alpha [13]: [16, 16, 15, 14, 15, 12, 11, 10, 11, 12]
visited [14]: true
alpha [14]: [15]
visited [15]: true
alpha [15]: [14]
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
start: [0xa5d823561d7300bf]#(C12(C11(J(10)(11)))(C-(12)))
return: [0xa5d823561d7300bf]#invalid(None)
extra: [0xa5d823561d7300bf]#invalid(None)
start: [0xa5d823561d7300bf]#(C12(C11(J(10)(11)))(C-(12)))
finish: [0x687cea498441ea8b]#(C12(J(10)(11))(12))
start: [0x687cea498441ea8b]#(C12(J(10)(11))(12))
start: [0x687cea498441ea8b]#(C12(J(10)(11))(12))
alpha[12]: [11, 10]
subtree_roots: [42]
sibling_groups: [(42, 0)], tree=[0x687cea498441ea8b]#(C12(J(10)(11))(12))
refining tree=[0x687cea498441ea8b]#(J(10)(11)), index=42, split_type=Left, new_prime=0
alpha[11]: [12]
subtree_roots: [12]
sibling_groups: [(12, 0)], tree=[0x687cea498441ea8b]#(C12(J(10)(11))(12))
refining tree=[0x687cea498441ea8b]#(12), index=12, split_type=Left, new_prime=0
alpha[10]: [12]
subtree_roots: [12]
sibling_groups: [(12, 0)], tree=[0x687cea498441ea8b]#(C12(J(10)(11))(12))
refining tree=[0x687cea498441ea8b]#(12), index=12, split_type=Left, new_prime=0
compute_fact_perm_edges 18
start: prob=[0xe46f6a6052e6b163]#(C12(J(10)(11)(12))), new=[0xe46f6a6052e6b163]#invalid(None)
main problem (34): [0xe46f6a6052e6b163]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(C-(16))(C15(C-(14))(C-(15))(C12(J(10)(11)(12)))))(C-(13))(C-(17)))))))
current problem: [0xe46f6a6052e6b163]#(C15(C-(14))(C-(15))(C12(J(10)(11)(12))))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11, 10, 11, 12]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: true
alpha [10]: []
visited [11]: true
alpha [11]: []
visited [12]: true
alpha [12]: []
visited [13]: true
alpha [13]: [16, 16, 15, 14, 15, 12, 11, 10, 11, 12]
visited [14]: true
alpha [14]: [15]
visited [15]: true
alpha [15]: [14]
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
start: [0xe46f6a6052e6b163]#(C15(C-(14))(C-(15))(C12(J(10)(11)(12))))
return: [0xabb7772d850daa34]#(J(10)(11)(12))
extra: [0xabb7772d850daa34]#(J(10)(11)(12))
start: [0xabb7772d850daa34]#(C15(C-(14))(C-(15)))
finish: [0xf4f5b76c32c387e6]#(C15(14)(15))
start: [0xf4f5b76c32c387e6]#(C15(14)(15))
start: [0xf4f5b76c32c387e6]#(C15(14)(15))
alpha[15]: [14]
subtree_roots: [14]
sibling_groups: [(14, 0)], tree=[0xf4f5b76c32c387e6]#(C15(14)(15))
refining tree=[0xf4f5b76c32c387e6]#(14), index=14, split_type=Left, new_prime=0
alpha[14]: [15]
subtree_roots: [15]
sibling_groups: [(15, 0)], tree=[0xf4f5b76c32c387e6]#(C15(14)(15))
refining tree=[0xf4f5b76c32c387e6]#(15), index=15, split_type=Left, new_prime=0
compute_fact_perm_edges 18
start: prob=[0x531f1fff1cae843]#(C15(J(14)(15))), new=[0x531f1fff1cae843]#(J(10)(11)(12))
main problem (35): [0x363db6234bf4551]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(C-(16))(C15(U(J(14)(15))(J(10)(11)(12)))))(C-(13))(C-(17)))))))
current problem: [0x363db6234bf4551]#(C16(C-(16))(C15(U(J(14)(15))(J(10)(11)(12)))))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11, 10, 11, 12]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: true
alpha [10]: []
visited [11]: true
alpha [11]: []
visited [12]: true
alpha [12]: []
visited [13]: true
alpha [13]: [16, 16, 15, 14, 15, 12, 11, 10, 11, 12]
visited [14]: true
alpha [14]: []
visited [15]: true
alpha [15]: []
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
start: [0x363db6234bf4551]#(C16(C-(16))(C15(U(J(14)(15))(J(10)(11)(12)))))
return: [0x2247aa9ead17be10]#(U(J(14)(15))(J(10)(11)(12)))
extra: [0x2247aa9ead17be10]#(U(J(14)(15))(J(10)(11)(12)))
start: [0x2247aa9ead17be10]#(C16(C-(16)))
finish: [0x4755248908a82aa5]#(C16(16))
start: [0x4755248908a82aa5]#(C16(16))
start: [0x4755248908a82aa5]#(C16(16))
alpha[16]: []
subtree_roots: []
sibling_groups: [], tree=[0x4755248908a82aa5]#(C16(16))
compute_fact_perm_edges 18
start: prob=[0x4755248908a82aa5]#(C16(16)), new=[0x4755248908a82aa5]#(U(J(14)(15))(J(10)(11)(12)))
main problem (36): [0x5ffc1350e657f431]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(U(16)(J(14)(15))(J(10)(11)(12))))(C-(13))(C-(17)))))))
current problem: [0x5ffc1350e657f431]#(C-(13))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11, 10, 11, 12]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: true
alpha [10]: []
visited [11]: true
alpha [11]: []
visited [12]: true
alpha [12]: []
visited [13]: true
alpha [13]: [16, 16, 15, 14, 15, 12, 11, 10, 11, 12]
visited [14]: true
alpha [14]: []
visited [15]: true
alpha [15]: []
visited [16]: true
alpha [16]: []
visited [17]: false
alpha [17]: []
enter: pivot=13, current_prob=33, nbr_prob=None
main problem (37): [0x5ffc1350e657f431]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(U(16)(J(14)(15))(J(10)(11)(12))))(C-(13))(C-(17)))))))
current problem: [0x5ffc1350e657f431]#(C-(17))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11, 10, 11, 12, 13]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: true
alpha [10]: [13]
visited [11]: true
alpha [11]: [13]
visited [12]: true
alpha [12]: [13]
visited [13]: true
alpha [13]: [16, 16, 15, 14, 15, 12, 11, 10, 11, 12]
visited [14]: true
alpha [14]: [13]
visited [15]: true
alpha [15]: [13]
visited [16]: true
alpha [16]: [13]
visited [17]: false
alpha [17]: []
enter: pivot=17, current_prob=38, nbr_prob=None
main problem (38): [0x5ffc1350e657f431]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(C16(U(16)(J(14)(15))(J(10)(11)(12))))(C-(13))(C-(17)))))))
current problem: [0x5ffc1350e657f431]#(C13(C16(U(16)(J(14)(15))(J(10)(11)(12))))(C-(13))(C-(17)))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11, 10, 11, 12, 13, 17]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: true
alpha [10]: [13]
visited [11]: true
alpha [11]: [13]
visited [12]: true
alpha [12]: [13]
visited [13]: true
alpha [13]: [16, 16, 15, 14, 15, 12, 11, 10, 11, 12]
visited [14]: true
alpha [14]: [13, 17]
visited [15]: true
alpha [15]: [13, 17]
visited [16]: true
alpha [16]: [13, 17]
visited [17]: true
alpha [17]: []
start: [0x5ffc1350e657f431]#(C13(C16(U(16)(J(14)(15))(J(10)(11)(12))))(C-(13))(C-(17)))
return: [0x5ffc1350e657f431]#invalid(None)
extra: [0x5ffc1350e657f431]#invalid(None)
start: [0x5ffc1350e657f431]#(C13(C16(U(16)(J(14)(15))(J(10)(11)(12))))(C-(13))(C-(17)))
finish: [0xde03a1a04d9f2320]#(C13(U(16)(J(14)(15))(J(10)(11)(12)))(13)(17))
start: [0xde03a1a04d9f2320]#(C13(U(16)(J(14)(15))(J(10)(11)(12)))(13)(17))
start: [0xde03a1a04d9f2320]#(C13(U(16)(J(14)(15))(J(10)(11)(12)))(13)(17))
alpha[17]: [15, 14, 16]
subtree_roots: [16, 43]
sibling_groups: [(41, 0)], tree=[0xf1eb7933019275fb]#(C13(U(U(16)(J(14)(15)))(J(10)(11)(12)))(13)(17))
refining tree=[0xf1eb7933019275fb]#(U(16)(J(14)(15))), index=41, split_type=Left, new_prime=0
alpha[13]: [16, 14, 15, 10, 11, 12]
subtree_roots: [44, 41]
sibling_groups: [(44, 0), (41, 0)], tree=[0x5d29a3993f595447]#(C13(U(16)(J(14)(15)))(J(10)(11)(12))(13)(17))
refining tree=[0x5d29a3993f595447]#(J(10)(11)(12)), index=44, split_type=Left, new_prime=0
refining tree=[0x5d29a3993f595447]#(U(16)(J(14)(15))), index=41, split_type=Left, new_prime=0
alpha[12]: [13]
subtree_roots: [13]
sibling_groups: [(13, 0)], tree=[0x5d29a3993f595447]#(C13(U(16)(J(14)(15)))(J(10)(11)(12))(13)(17))
refining tree=[0x5d29a3993f595447]#(13), index=13, split_type=Left, new_prime=0
alpha[11]: [13]
subtree_roots: [13]
sibling_groups: [(13, 0)], tree=[0x5d29a3993f595447]#(C13(U(16)(J(14)(15)))(J(10)(11)(12))(13)(17))
refining tree=[0x5d29a3993f595447]#(13), index=13, split_type=Left, new_prime=0
alpha[10]: [13]
subtree_roots: [13]
sibling_groups: [(13, 0)], tree=[0x5d29a3993f595447]#(C13(U(16)(J(14)(15)))(J(10)(11)(12))(13)(17))
refining tree=[0x5d29a3993f595447]#(13), index=13, split_type=Left, new_prime=0
alpha[15]: [13, 17]
subtree_roots: [13, 17]
sibling_groups: [(13, 0), (17, 0)], tree=[0x5d29a3993f595447]#(C13(U(16)(J(14)(15)))(J(10)(11)(12))(13)(17))
refining tree=[0x5d29a3993f595447]#(13), index=13, split_type=Left, new_prime=0
refining tree=[0x5d29a3993f595447]#(17), index=17, split_type=Left, new_prime=0
alpha[14]: [13, 17]
subtree_roots: [13, 17]
sibling_groups: [(13, 0), (17, 0)], tree=[0x5d29a3993f595447]#(C13(U(16)(J(14)(15)))(J(10)(11)(12))(13)(17))
refining tree=[0x5d29a3993f595447]#(13), index=13, split_type=Left, new_prime=0
refining tree=[0x5d29a3993f595447]#(17), index=17, split_type=Left, new_prime=0
alpha[16]: [13, 17]
subtree_roots: [13, 17]
sibling_groups: [(13, 0), (17, 0)], tree=[0x5d29a3993f595447]#(C13(U(16)(J(14)(15)))(J(10)(11)(12))(13)(17))
refining tree=[0x5d29a3993f595447]#(13), index=13, split_type=Left, new_prime=0
refining tree=[0x5d29a3993f595447]#(17), index=17, split_type=Left, new_prime=0
compute_fact_perm_edges 18
start: prob=[0x1af95e7c062d7142]#(C13(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))), new=[0x1af95e7c062d7142]#invalid(None)
main problem (39): [0x1af95e7c062d7142]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(C-(6))(C13(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))))))
current problem: [0x1af95e7c062d7142]#(C6(C-(6))(C13(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11, 10, 11, 12, 13, 17]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: true
alpha [10]: []
visited [11]: true
alpha [11]: []
visited [12]: true
alpha [12]: []
visited [13]: true
alpha [13]: []
visited [14]: true
alpha [14]: []
visited [15]: true
alpha [15]: []
visited [16]: true
alpha [16]: []
visited [17]: true
alpha [17]: []
start: [0x1af95e7c062d7142]#(C6(C-(6))(C13(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
return: [0x3a35bedf4f2d5721]#(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))
extra: [0x3a35bedf4f2d5721]#(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))
start: [0x3a35bedf4f2d5721]#(C6(C-(6)))
finish: [0xdbd24ce4b769b1e1]#(C6(6))
start: [0xdbd24ce4b769b1e1]#(C6(6))
start: [0xdbd24ce4b769b1e1]#(C6(6))
alpha[6]: []
subtree_roots: []
sibling_groups: [], tree=[0xdbd24ce4b769b1e1]#(C6(6))
compute_fact_perm_edges 18
start: prob=[0xdbd24ce4b769b1e1]#(C6(6)), new=[0xdbd24ce4b769b1e1]#(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))
main problem (40): [0x19b907e1c7d8821f]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(C-(7))(C6(U(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))))))
current problem: [0x19b907e1c7d8821f]#(C7(C-(7))(C6(U(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11, 10, 11, 12, 13, 17]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: true
alpha [10]: []
visited [11]: true
alpha [11]: []
visited [12]: true
alpha [12]: []
visited [13]: true
alpha [13]: []
visited [14]: true
alpha [14]: []
visited [15]: true
alpha [15]: []
visited [16]: true
alpha [16]: []
visited [17]: true
alpha [17]: []
start: [0x19b907e1c7d8821f]#(C7(C-(7))(C6(U(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))))
return: [0xe615872e2bfcb17d]#(U(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))
extra: [0xe615872e2bfcb17d]#(U(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))
start: [0xe615872e2bfcb17d]#(C7(C-(7)))
finish: [0xdcc621a99aa4d1f8]#(C7(7))
start: [0xdcc621a99aa4d1f8]#(C7(7))
start: [0xdcc621a99aa4d1f8]#(C7(7))
alpha[7]: []
subtree_roots: []
sibling_groups: [], tree=[0xdcc621a99aa4d1f8]#(C7(7))
compute_fact_perm_edges 18
start: prob=[0xdcc621a99aa4d1f8]#(C7(7)), new=[0xdcc621a99aa4d1f8]#(U(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))
main problem (41): [0x2c82f0d1eab9af91]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(C-(8))(C-(9))(C7(U(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))))
current problem: [0x2c82f0d1eab9af91]#(C9(C-(8))(C-(9))(C7(U(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11, 10, 11, 12, 13, 17]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: [9]
visited [9]: true
alpha [9]: [8]
visited [10]: true
alpha [10]: []
visited [11]: true
alpha [11]: []
visited [12]: true
alpha [12]: []
visited [13]: true
alpha [13]: []
visited [14]: true
alpha [14]: []
visited [15]: true
alpha [15]: []
visited [16]: true
alpha [16]: []
visited [17]: true
alpha [17]: []
start: [0x2c82f0d1eab9af91]#(C9(C-(8))(C-(9))(C7(U(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))))
return: [0xcce39228bfcdb996]#(U(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))
extra: [0xcce39228bfcdb996]#(U(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))
start: [0xcce39228bfcdb996]#(C9(C-(8))(C-(9)))
finish: [0xa05e7dc186011b80]#(C9(8)(9))
start: [0xa05e7dc186011b80]#(C9(8)(9))
start: [0xa05e7dc186011b80]#(C9(8)(9))
alpha[9]: [8]
subtree_roots: [8]
sibling_groups: [(8, 0)], tree=[0xa05e7dc186011b80]#(C9(8)(9))
refining tree=[0xa05e7dc186011b80]#(8), index=8, split_type=Left, new_prime=0
alpha[8]: [9]
subtree_roots: [9]
sibling_groups: [(9, 0)], tree=[0xa05e7dc186011b80]#(C9(8)(9))
refining tree=[0xa05e7dc186011b80]#(9), index=9, split_type=Left, new_prime=0
compute_fact_perm_edges 18
start: prob=[0x749f55a34f9f65f9]#(C9(J(8)(9))), new=[0x749f55a34f9f65f9]#(U(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))
main problem (42): [0x659495fc73ff6db1]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))))
current problem: [0x659495fc73ff6db1]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))))
visited [0]: true
alpha [0]: [4]
visited [1]: true
alpha [1]: []
visited [2]: true
alpha [2]: []
visited [3]: true
alpha [3]: []
visited [4]: true
alpha [4]: [0, 5, 3, 2, 2, 1, 3, 5]
visited [5]: true
alpha [5]: [9, 8, 9, 7, 7, 6, 6, 13, 16, 16, 15, 14, 15, 12, 11, 10, 11, 12, 13, 17]
visited [6]: true
alpha [6]: []
visited [7]: true
alpha [7]: []
visited [8]: true
alpha [8]: []
visited [9]: true
alpha [9]: []
visited [10]: true
alpha [10]: []
visited [11]: true
alpha [11]: []
visited [12]: true
alpha [12]: []
visited [13]: true
alpha [13]: []
visited [14]: true
alpha [14]: []
visited [15]: true
alpha [15]: []
visited [16]: true
alpha [16]: []
visited [17]: true
alpha [17]: []
start: [0x659495fc73ff6db1]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))))
return: [0x659495fc73ff6db1]#invalid(None)
extra: [0x659495fc73ff6db1]#invalid(None)
start: [0x659495fc73ff6db1]#(C0(C-(4))(C-(0))(C5(J(U(2)(1))(3)(5)))(C9(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))))
finish: [0x1f372b83dd0086ea]#(C0(4)(0)(J(U(2)(1))(3)(5))(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
start: [0x1f372b83dd0086ea]#(C0(4)(0)(J(U(2)(1))(3)(5))(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
start: [0x1f372b83dd0086ea]#(C0(4)(0)(J(U(2)(1))(3)(5))(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
alpha[13]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0x2023aba4fd02a208]#(C0(4)(0)(J(5)(U(2)(1))(3))(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0x2023aba4fd02a208]#(5), index=5, split_type=Right, new_prime=0
alpha[12]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(5), index=5, split_type=Right, new_prime=0
alpha[11]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(5), index=5, split_type=Right, new_prime=0
alpha[10]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(5), index=5, split_type=Right, new_prime=0
alpha[15]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(5), index=5, split_type=Right, new_prime=0
alpha[14]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(5), index=5, split_type=Right, new_prime=0
alpha[16]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(5), index=5, split_type=Right, new_prime=0
alpha[17]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(5), index=5, split_type=Right, new_prime=0
alpha[6]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(5), index=5, split_type=Right, new_prime=0
alpha[7]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(5), index=5, split_type=Right, new_prime=0
alpha[9]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(5), index=5, split_type=Right, new_prime=0
alpha[8]: [5]
subtree_roots: [5]
sibling_groups: [(5, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(5), index=5, split_type=Right, new_prime=0
alpha[5]: [9, 8, 4, 7, 17, 6, 13, 12, 16, 11, 15, 14, 10]
subtree_roots: [4, 40]
sibling_groups: [(4, 0), (40, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(4), index=4, split_type=Left, new_prime=0
refining tree=[0xe0b9e9a25f4931a7]#(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))), index=40, split_type=Left, new_prime=0
alpha[3]: [4]
subtree_roots: [4]
sibling_groups: [(4, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(4), index=4, split_type=Left, new_prime=0
alpha[1]: [4]
subtree_roots: [4]
sibling_groups: [(4, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(4), index=4, split_type=Left, new_prime=0
alpha[2]: [4]
subtree_roots: [4]
sibling_groups: [(4, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(4), index=4, split_type=Left, new_prime=0
alpha[0]: [4]
subtree_roots: [4]
sibling_groups: [(4, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(4), index=4, split_type=Left, new_prime=0
alpha[4]: [0, 5, 3, 2, 1]
subtree_roots: [0, 5, 28]
sibling_groups: [(0, 0), (5, 0), (28, 0)], tree=[0xe0b9e9a25f4931a7]#(C0(4)(0)(J(U(2)(1))(3))(5)(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13))))
refining tree=[0xe0b9e9a25f4931a7]#(0), index=0, split_type=Left, new_prime=0
refining tree=[0xe0b9e9a25f4931a7]#(5), index=5, split_type=Left, new_prime=0
refining tree=[0xe0b9e9a25f4931a7]#(J(U(2)(1))(3)), index=28, split_type=Left, new_prime=0
compute_fact_perm_edges 18
start: prob=[0x185c4ab8fc670a0b]#(C0(P(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))(5)(J(U(2)(1))(3))(4)(0))), new=[0x185c4ab8fc670a0b]#invalid(None)
result: [0x9c0c69a8d87b56d2]#(P(U(J(8)(9))(7)(6)(P(17)(U(16)(J(14)(15)))(J(10)(11)(12))(13)))(5)(J(U(2)(1))(3))(4)(0))